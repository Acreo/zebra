/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/

#include "qzebra.h"

///
//  Copy-construct to return the proper wrapped c types
QZebHandler::QZebHandler (zeb_handler_t *self, QObject *qObjParent) : QObject (qObjParent)
{
    this->self = self;
}


///
//  Add a new offer this handler will handle. Returns 0 if successful,
//  otherwise -1.                                                     
int QZebHandler::addOffer (QZactor *self, int method, const QString &uri)
{
    int rv = zeb_handler_add_offer (self->self, method, uri.toUtf8().data());
    return rv;
}

///
//  Add a new accept type that this handler can deliver. May be a regular
//  expression. Returns 0 if successfull, otherwise -1.                  
int QZebHandler::addAccept (QZactor *self, const QString &accept)
{
    int rv = zeb_handler_add_accept (self->self, accept.toUtf8().data());
    return rv;
}

///
//  Self test of this class.
void QZebHandler::test (bool verbose)
{
    zeb_handler_test (verbose);
    
}
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
*/
