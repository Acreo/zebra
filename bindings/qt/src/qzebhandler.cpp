/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/

#include "qzebra.h"

///
//  Copy-construct to return the proper wrapped c types
QZebHandler::QZebHandler (zeb_handler_t *self, QObject *qObjParent) : QObject (qObjParent)
{
    this->self = self;
}


///
//  Add a new offer this handler will handle. Returns 0 if successful,
//  otherwise -1.                                                     
//  The content type parameter is optional and is used to             
//  filter requests upon their requested (GET) or provided (POST/PUT) 
//  content's type. The content type parameter may be a regex. If the 
//  request's content type does not match it is automatically rejected
//  with the error code 406 (Not acceptable).                         
int QZebHandler::addOffer (QZactor *self, int method, const QString &uri, const QString &contentType)
{
    int rv = zeb_handler_add_offer (self->self, method, uri.toUtf8().data(), contentType.toUtf8().data());
    return rv;
}

///
//  Self test of this class.
void QZebHandler::test (bool verbose)
{
    zeb_handler_test (verbose);
    
}
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
