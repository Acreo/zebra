/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
#ifndef Q_ZEB_HANDLER_H
#define Q_ZEB_HANDLER_H

#include "qzebra.h"

class QT_ZEBRA_EXPORT QZebHandler : public QObject
{
    Q_OBJECT
public:

    //  Copy-construct to return the proper wrapped c types
    QZebHandler (zeb_handler_t *self, QObject *qObjParent = 0);

    //  Add a new offer this handler will handle. Returns 0 if successful,       
    //  otherwise -1.                                                            
    //  The content type parameter is optional and is used to                    
    //  filter requests upon their requested (GET) or provided (POST/PUT)        
    //  content's type. The content type parameter may be a regex which is       
    //  useful for GET offers that can supply resources in different formats.    
    //  If the client did request multiple content types then the first match    
    //  will be chosen and applied to the request. All other content types are   
    //  drooped. If the request's content type does not match it is automatically
    //  rejected with the error code 406 (Not acceptable).                       
    static int addOffer (QZactor *self, int method, const QString &uri, const QString &contentType);

    //  Self test of this class.
    static void test (bool verbose);

    zeb_handler_t *self;
};
#endif //  Q_ZEB_HANDLER_H
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
