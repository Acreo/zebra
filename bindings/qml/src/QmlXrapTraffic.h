/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/

#ifndef QML_XRAP_TRAFFIC_H
#define QML_XRAP_TRAFFIC_H

#include <QtQml>

#include <zebra.h>
#include "qml_zebra_plugin.h"


class QmlXrapTraffic : public QObject
{
    Q_OBJECT
    Q_PROPERTY(bool isNULL READ isNULL)
    
public:
    xrap_traffic_t *self;
    
    QmlXrapTraffic() { self = NULL; }
    bool isNULL() { return self == NULL; }
    
    static QObject* qmlAttachedProperties(QObject* object); // defined in QmlXrapTraffic.cpp
    
public slots:
    //  Receive a xrap_traffic from the socket. Returns 0 if OK, -1 if
    //  there was an error. Blocks if there is no message waiting.    
    int recv (zsock_t *input);

    //  Send the xrap_traffic to the output socket, does not destroy it
    int send (zsock_t *output);

    //  Print contents of message to stdout
    void print ();

    //  Get the message routing id, as a frame
    zframe_t *routingId ();

    //  Set the message routing id from a frame
    void setRoutingId (zframe_t *routingId);

    //  Get the xrap_traffic message id
    int id ();

    //  Set the xrap_traffic message id
    void setId (int id);

    //  Get the xrap_traffic message id as printable text
    const QString command ();

    //  Get the address field
    const QString address ();

    //  Set the address field
    void setAddress (const QString &address);

    //  Get the timeout field
    uint32_t timeout ();

    //  Set the timeout field
    void setTimeout (uint32_t timeout);

    //  Get a copy of the content field
    zmsg_t *content ();

    //  Get the content field and transfer ownership to caller
    zmsg_t *getContent ();

    //  
    void setContent (zmsg_t **contentP);

    //  Get the route field
    const QString route ();

    //  Set the route field
    void setRoute (const QString &route);

    //  Get the method field
    const QString method ();

    //  Set the method field
    void setMethod (const QString &method);

    //  Get the sender field
    zuuid_t *sender ();

    //  Get the sender field and transfer ownership to caller
    zuuid_t *getSender ();

    //  Set the sender field
    void setSender (zuuid_t *senderP);

    //  Get the status_code field
    uint16_t statusCode ();

    //  Set the status_code field
    void setStatusCode (uint16_t statusCode);

    //  Get the status_reason field
    const QString statusReason ();

    //  Set the status_reason field
    void setStatusReason (const QString &statusReason);
};

class QmlXrapTrafficAttached : public QObject
{
    Q_OBJECT
    QObject* m_attached;
    
public:
    QmlXrapTrafficAttached (QObject* attached) {
        Q_UNUSED (attached);
    };
    
public slots:
    //  Self test of this class.
    void test (bool verbose);

    //  Create a new empty xrap_traffic
    QmlXrapTraffic *construct ();

    //  Destroy a xrap_traffic instance
    void destruct (QmlXrapTraffic *qmlSelf);
};


QML_DECLARE_TYPEINFO(QmlXrapTraffic, QML_HAS_ATTACHED_PROPERTIES)

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
