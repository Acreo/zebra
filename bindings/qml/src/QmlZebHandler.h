/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/

#ifndef QML_ZEB_HANDLER_H
#define QML_ZEB_HANDLER_H

#include <QtQml>

#include <zebra.h>
#include "qml_zebra_plugin.h"


class QmlZebHandler : public QObject
{
    Q_OBJECT
    Q_PROPERTY(bool isNULL READ isNULL)
    
public:
    zeb_handler_t *self;
    
    QmlZebHandler() { self = NULL; }
    bool isNULL() { return self == NULL; }
    
    static QObject* qmlAttachedProperties(QObject* object); // defined in QmlZebHandler.cpp
    
public slots:};

class QmlZebHandlerAttached : public QObject
{
    Q_OBJECT
    QObject* m_attached;
    
public:
    QmlZebHandlerAttached (QObject* attached) {
        Q_UNUSED (attached);
    };
    
public slots:
    //  Add a new offer this handler will handle. Returns 0 if successful,
    //  otherwise -1.                                                     
    int addOffer (zactor_t *self, int method, const QString &uri);

    //  Add a new accept type that this handler can deliver. May be a regular
    //  expression. Returns 0 if successfull, otherwise -1.                  
    int addAccept (zactor_t *self, const QString &accept);

    //  Self test of this class.
    void test (bool verbose);
};


QML_DECLARE_TYPEINFO(QmlZebHandler, QML_HAS_ATTACHED_PROPERTIES)

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
