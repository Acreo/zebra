################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################

benchmark_progs = \
    bench/ztrie_bench \
    bench/ztrie_vs_zhash_bench

noinst_PROGRAMS += bench/ztrie_bench
bench_ztrie_bench_CPPFLAGS = ${AM_CPPFLAGS}
bench_ztrie_bench_LDADD = ${program_libs}
bench_ztrie_bench_SOURCES = bench/ztrie_bench.c

noinst_PROGRAMS += bench/ztrie_vs_zhash_bench
bench_ztrie_vs_zhash_bench_CPPFLAGS = ${AM_CPPFLAGS}
bench_ztrie_vs_zhash_bench_LDADD = ${program_libs}
bench_ztrie_vs_zhash_bench_SOURCES = bench/ztrie_vs_zhash_bench.c

# Run the benchmark binaries
.PHONY: bench
bench: $(benchmark_progs)
	for f in $^; do $(LIBTOOL) --mode=execute $(srcdir)/$$f; done

# Run the selftest binary under valgrind to check for memory leaks
bench-memcheck: $(benchmark_progs)
	for f in $^; do \
		$(LIBTOOL) --mode=execute valgrind --tool=memcheck \
			--leak-check=full --show-reachable=yes --error-exitcode=1 \
			--suppressions=$(srcdir)/src/.valgrind.supp \
			$(srcdir)/$$f; \
	done

# Run the selftest binary under valgrind to check for performance leaks
bench-callcheck: $(benchmark_progs)
	for f in $^; do \
		$(LIBTOOL) --mode=execute valgrind --tool=callgrind \
			$(srcdir)/$$f; \
	done

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Please refer to the README for information about making permanent changes.  #
################################################################################
