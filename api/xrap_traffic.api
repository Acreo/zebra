<!--
    xrap_traffic - zebra protocol

    Codec class for xrap_traffic.

    ** WARNING *************************************************************
    THIS SOURCE FILE IS 100% GENERATED. If you edit this file, you will lose
    your changes at the next build cycle. This is great for temporary printf
    statements. DO NOT MAKE ANY CHANGES YOU WISH TO KEEP. The correct places
    for commits are:

     * The XML model used for this code generation: xrap_traffic.xml, or
     * The code generation script that built this file: zproto_codec_c
    ************************************************************************
    Copyright (c) the Contributors as noted in the AUTHORS file.       
    This file is part of ZEBRA.                                        
                                                                       
    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.           
 -->
<class name = "xrap_traffic">
    <constant name = "success" value = "200" />
    <constant name = "stored" value = "201" />
    <constant name = "delivered" value = "202" />
    <constant name = "not delivered" value = "300" />
    <constant name = "content too large" value = "301" />
    <constant name = "timeout expired" value = "302" />
    <constant name = "connection refused" value = "303" />
    <constant name = "bad request" value = "400" />
    <constant name = "access refused" value = "401" />
    <constant name = "not found" value = "404" />
    <constant name = "method not allowed" value = "405" />
    <constant name = "not acceptable" value = "406" />
    <constant name = "conflict" value = "409" />
    <constant name = "precondition failed" value = "412" />
    <constant name = "resource locked" value = "423" />
    <constant name = "command invalid" value = "500" />
    <constant name = "not implemented" value = "501" />
    <constant name = "internal error" value = "502" />
    <constant name = "connection_open" value = "1" />
    <constant name = "connection_ping" value = "2" />
    <constant name = "connection_pong" value = "3" />
    <constant name = "connection_close" value = "4" />
    <constant name = "xrap_send" value = "5" />
    <constant name = "xrap_offer" value = "6" />
    <constant name = "xrap_deliver" value = "7" />
    <constant name = "ok" value = "8" />
    <constant name = "fail" value = "9" />
    <constant name = "error" value = "10" />

<constructor>
    Create a new empty xrap_traffic
</constructor>

<destructor>
    Destroy a xrap_traffic instance
</destructor>

<method name = "recv">
    Receive a xrap_traffic from the socket. Returns 0 if OK, -1 if
    there was an error. Blocks if there is no message waiting.
    <argument name = "input" type = "zsock" />
    <return type = "integer" />
</method>

<method name = "send">
    Send the xrap_traffic to the output socket, does not destroy it
    <argument name = "output" type = "zsock" />
    <return type = "integer" />
</method>

<method name = "print">
    Print contents of message to stdout
</method>

<method name = "routing id">
    Get the message routing id, as a frame
    <return type = "zframe" />
</method>

<method name = "set routing id">
    Set the message routing id from a frame
    <argument name = "routing id" type = "zframe" />
</method>

<method name = "id">
    Get the xrap_traffic message id
    <return type = "integer" />
</method>

<method name = "set id">
    Set the xrap_traffic message id
    <argument name = "id" type = "integer" />
</method>

<method name = "command">
    Get the xrap_traffic message id as printable text
    <return type = "string" />
</method>

<method name = "address">
    Get the address field
    <return type = "string" />
</method>
<method name = "set address">
    Set the address field
    <argument name = "address" type = "string" />
</method>
<method name = "timeout">
    Get the timeout field
    <return type = "number" size = "4" />
</method>
<method name = "set timeout">
    Set the timeout field
    <argument name = "timeout" type = "number" size = "4" />
</method>
<method name = "content">
    Get a copy of the content field
    <return type = "zmsg" />
</method>
<method name = "get content">
    Get the content field and transfer ownership to caller
    <return type = "zmsg" />
</method>
    Set the content field, transferring ownership from caller
<method name = "set content">
    <argument name = "content_p" type = "zmsg" by_reference = "1" />
</method>
<method name = "route">
    Get the route field
    <return type = "string" />
</method>
<method name = "set route">
    Set the route field
    <argument name = "route" type = "string" />
</method>
<method name = "method">
    Get the method field
    <return type = "string" />
</method>
<method name = "set method">
    Set the method field
    <argument name = "method" type = "string" />
</method>
<method name = "sender">
    Get the sender field
    <return type = "zuuid" />
</method>
<method name = "get sender">
    Get the sender field and transfer ownership to caller
    <return type = "zuuid" />
</method>
<method name = "set sender">
    Set the sender field
    <argument name = "sender_p" type = "zuuid" />
</method>
<method name = "status_code">
    Get the status_code field
    <return type = "number" size = "2" />
</method>
<method name = "set status_code">
    Set the status_code field
    <argument name = "status_code" type = "number" size = "2" />
</method>
<method name = "status_reason">
    Get the status_reason field
    <return type = "string" />
</method>
<method name = "set status_reason">
    Set the status_reason field
    <argument name = "status_reason" type = "string" />
</method>
</class>
