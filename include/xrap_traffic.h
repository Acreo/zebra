/*  =========================================================================
    xrap_traffic - Set the content field, transferring ownership from caller

    Copyright (c) the Contributors as noted in the AUTHORS file.       
    This file is part of ZEBRA.                                        
                                                                       
    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.           
    =========================================================================
*/

#ifndef XRAP_TRAFFIC_H_INCLUDED
#define XRAP_TRAFFIC_H_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
//  @warning Please edit the model at "api/xrap_traffic.api" to make changes.
//  @interface
//  This API is a draft, and may change without notice.
#ifdef ZEBRA_BUILD_DRAFT_API
#define XRAP_TRAFFIC_SUCCESS 200            // 
#define XRAP_TRAFFIC_STORED 201             // 
#define XRAP_TRAFFIC_DELIVERED 202          // 
#define XRAP_TRAFFIC_NOT_DELIVERED 300      // 
#define XRAP_TRAFFIC_CONTENT_TOO_LARGE 301  // 
#define XRAP_TRAFFIC_TIMEOUT_EXPIRED 302    // 
#define XRAP_TRAFFIC_CONNECTION_REFUSED 303  // 
#define XRAP_TRAFFIC_BAD_REQUEST 400        // 
#define XRAP_TRAFFIC_ACCESS_REFUSED 401     // 
#define XRAP_TRAFFIC_NOT_FOUND 404          // 
#define XRAP_TRAFFIC_METHOD_NOT_ALLOWED 405  // 
#define XRAP_TRAFFIC_NOT_ACCEPTABLE 406     // 
#define XRAP_TRAFFIC_CONFLICT 409           // 
#define XRAP_TRAFFIC_PRECONDITION_FAILED 412  // 
#define XRAP_TRAFFIC_RESOURCE_LOCKED 423    // 
#define XRAP_TRAFFIC_COMMAND_INVALID 500    // 
#define XRAP_TRAFFIC_NOT_IMPLEMENTED 501    // 
#define XRAP_TRAFFIC_INTERNAL_ERROR 502     // 
#define XRAP_TRAFFIC_CONNECTION_OPEN 1      // 
#define XRAP_TRAFFIC_CONNECTION_PING 2      // 
#define XRAP_TRAFFIC_CONNECTION_PONG 3      // 
#define XRAP_TRAFFIC_CONNECTION_CLOSE 4     // 
#define XRAP_TRAFFIC_XRAP_SEND 5            // 
#define XRAP_TRAFFIC_XRAP_OFFER 6           // 
#define XRAP_TRAFFIC_XRAP_DELIVER 7         // 
#define XRAP_TRAFFIC_OK 8                   // 
#define XRAP_TRAFFIC_FAIL 9                 // 
#define XRAP_TRAFFIC_ERROR 10               // 

//  *** Draft method, for development use, may change without warning ***
//  Create a new empty xrap_traffic
ZEBRA_EXPORT xrap_traffic_t *
    xrap_traffic_new (void);

//  *** Draft method, for development use, may change without warning ***
//  Destroy a xrap_traffic instance
ZEBRA_EXPORT void
    xrap_traffic_destroy (xrap_traffic_t **self_p);

//  *** Draft method, for development use, may change without warning ***
//  Receive a xrap_traffic from the socket. Returns 0 if OK, -1 if
//  there was an error. Blocks if there is no message waiting.    
ZEBRA_EXPORT int
    xrap_traffic_recv (xrap_traffic_t *self, zsock_t *input);

//  *** Draft method, for development use, may change without warning ***
//  Send the xrap_traffic to the output socket, does not destroy it
ZEBRA_EXPORT int
    xrap_traffic_send (xrap_traffic_t *self, zsock_t *output);

//  *** Draft method, for development use, may change without warning ***
//  Print contents of message to stdout
ZEBRA_EXPORT void
    xrap_traffic_print (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Get the message routing id, as a frame
ZEBRA_EXPORT zframe_t *
    xrap_traffic_routing_id (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the message routing id from a frame
ZEBRA_EXPORT void
    xrap_traffic_set_routing_id (xrap_traffic_t *self, zframe_t *routing_id);

//  *** Draft method, for development use, may change without warning ***
//  Get the xrap_traffic message id
ZEBRA_EXPORT int
    xrap_traffic_id (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the xrap_traffic message id
ZEBRA_EXPORT void
    xrap_traffic_set_id (xrap_traffic_t *self, int id);

//  *** Draft method, for development use, may change without warning ***
//  Get the xrap_traffic message id as printable text
ZEBRA_EXPORT const char *
    xrap_traffic_command (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Get the address field
ZEBRA_EXPORT const char *
    xrap_traffic_address (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the address field
ZEBRA_EXPORT void
    xrap_traffic_set_address (xrap_traffic_t *self, const char *address);

//  *** Draft method, for development use, may change without warning ***
//  Get the timeout field
ZEBRA_EXPORT uint32_t
    xrap_traffic_timeout (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the timeout field
ZEBRA_EXPORT void
    xrap_traffic_set_timeout (xrap_traffic_t *self, uint32_t timeout);

//  *** Draft method, for development use, may change without warning ***
//  Get a copy of the content field
ZEBRA_EXPORT zmsg_t *
    xrap_traffic_content (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Get the content field and transfer ownership to caller
ZEBRA_EXPORT zmsg_t *
    xrap_traffic_get_content (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  
ZEBRA_EXPORT void
    xrap_traffic_set_content (xrap_traffic_t *self, zmsg_t **content_p);

//  *** Draft method, for development use, may change without warning ***
//  Get the route field
ZEBRA_EXPORT const char *
    xrap_traffic_route (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the route field
ZEBRA_EXPORT void
    xrap_traffic_set_route (xrap_traffic_t *self, const char *route);

//  *** Draft method, for development use, may change without warning ***
//  Get the method field
ZEBRA_EXPORT const char *
    xrap_traffic_method (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the method field
ZEBRA_EXPORT void
    xrap_traffic_set_method (xrap_traffic_t *self, const char *method);

//  *** Draft method, for development use, may change without warning ***
//  Get the sender field
ZEBRA_EXPORT zuuid_t *
    xrap_traffic_sender (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Get the sender field and transfer ownership to caller
ZEBRA_EXPORT zuuid_t *
    xrap_traffic_get_sender (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the sender field
ZEBRA_EXPORT void
    xrap_traffic_set_sender (xrap_traffic_t *self, zuuid_t *sender_p);

//  *** Draft method, for development use, may change without warning ***
//  Get the status_code field
ZEBRA_EXPORT uint16_t
    xrap_traffic_status_code (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the status_code field
ZEBRA_EXPORT void
    xrap_traffic_set_status_code (xrap_traffic_t *self, uint16_t status_code);

//  *** Draft method, for development use, may change without warning ***
//  Get the status_reason field
ZEBRA_EXPORT const char *
    xrap_traffic_status_reason (xrap_traffic_t *self);

//  *** Draft method, for development use, may change without warning ***
//  Set the status_reason field
ZEBRA_EXPORT void
    xrap_traffic_set_status_reason (xrap_traffic_t *self, const char *status_reason);

//  *** Draft method, for development use, may change without warning ***
//  Self test of this class.
ZEBRA_EXPORT void
    xrap_traffic_test (bool verbose);

#endif // ZEBRA_BUILD_DRAFT_API
//  @end

#ifdef __cplusplus
}
#endif

#endif
